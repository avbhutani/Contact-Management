{"ast":null,"code":"var _jsxFileName = \"/Users/anubhavbhutani/Desktop/Erino Assessment/frontend/src/components/ContactTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport UpdatePage from '../pages/UpdatePage';\nimport './ContactTable.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ContactTable = () => {\n  _s();\n  const [contacts, setContacts] = useState([]);\n  const [selectedContact, setSelectedContact] = useState(null);\n  const [rowId, setRowId] = useState(null);\n  const navigate = useNavigate();\n  const fetchContacts = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/contacts');\n      setContacts(response.data);\n    } catch (error) {\n      console.error('Error fetching contacts:', error);\n    }\n  };\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`http://localhost:4000/contacts/${id}`);\n      // alert('Contact deleted successfully');\n      toast('Contact Deleted Successfully!');\n      fetchContacts();\n    } catch (error) {\n      console.error('Error deleting contact:', error);\n    }\n  };\n  const updateContact = async id => {\n    try {\n      setRowId(id);\n      fetchContacts();\n    } catch (error) {\n      console.log('Error Updating Contact', error);\n    }\n  };\n  useEffect(() => {\n    fetchContacts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contact List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      cellPadding: \"10\",\n      style: {\n        width: '100%',\n        textAlign: 'left'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Job Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: contacts.map(contact => /*#__PURE__*/_jsxDEV(\"tr\", {\n          onClick: () => setSelectedContact(contact._id),\n          style: {\n            backgroundColor: selectedContact === contact._id ? '#f0f0f0' : 'white',\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.firstName || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.lastName || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.email || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.phoneNumber || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.company || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: contact.jobTitle || 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteContact(contact._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => updateContact(contact._id),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, contact._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), rowId ? /*#__PURE__*/_jsxDEV(UpdatePage, {\n      id: rowId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(ContactTable, \"FYrfAu6jkbW2qElO7yfZTOiO6DE=\", false, function () {\n  return [useNavigate];\n});\n_c = ContactTable;\nexport default ContactTable;\nvar _c;\n$RefreshReg$(_c, \"ContactTable\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","UpdatePage","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactTable","_s","contacts","setContacts","selectedContact","setSelectedContact","rowId","setRowId","navigate","fetchContacts","response","get","data","error","console","deleteContact","id","delete","updateContact","log","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","cellPadding","width","textAlign","map","contact","onClick","_id","backgroundColor","cursor","firstName","lastName","email","phoneNumber","company","jobTitle","_c","$RefreshReg$"],"sources":["/Users/anubhavbhutani/Desktop/Erino Assessment/frontend/src/components/ContactTable.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport UpdatePage from '../pages/UpdatePage';\nimport './ContactTable.css'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ContactTable = () => {\n    const [contacts, setContacts] = useState([]);\n    const [selectedContact, setSelectedContact] = useState(null);\n    const [rowId,setRowId] = useState(null)\n\n    const navigate = useNavigate()\n\n    const fetchContacts = async () => {\n        try {\n            const response = await axios.get('http://localhost:4000/contacts');\n            setContacts(response.data);\n        } catch (error) {\n            console.error('Error fetching contacts:', error);\n        }\n    };\n\n    const deleteContact = async (id) => {\n        try {\n            await axios.delete(`http://localhost:4000/contacts/${id}`);\n            // alert('Contact deleted successfully');\n            toast('Contact Deleted Successfully!')\n            fetchContacts(); \n        } catch (error) {\n            console.error('Error deleting contact:', error);\n        }\n    };\n    const updateContact = async (id) => {\n        try {\n            setRowId(id)\n            fetchContacts()\n        } catch (error) {\n            console.log('Error Updating Contact',error)\n        }\n    }\n\n    useEffect(() => {\n        fetchContacts();\n    }, []);\n\n    return (\n        <div style={{ padding: '20px' }}>\n            <ToastContainer />\n            <h1>Contact List</h1>\n            <table border=\"1\" cellPadding=\"10\" style={{ width: '100%', textAlign: 'left' }}>\n                <thead>\n                    <tr>\n                        <th>First Name</th>\n                        <th>Last Name</th>\n                        <th>Email</th>\n                        <th>Phone Number</th>\n                        <th>Company</th>\n                        <th>Job Title</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {contacts.map((contact) => (\n                        <tr\n                            key={contact._id}\n                            onClick={() => setSelectedContact(contact._id)}\n                            style={{\n                                backgroundColor: selectedContact === contact._id ? '#f0f0f0' : 'white',\n                                cursor: 'pointer',\n                            }}\n                        >\n                            <td>{contact.firstName  || 'N/A'}</td>\n                            <td>{contact.lastName  || 'N/A'}</td>\n                            <td>{contact.email || 'N/A'}</td>\n                            <td>{contact.phoneNumber || 'N/A'}</td>\n                            <td>{contact.company || 'N/A'}</td>\n                            <td>{contact.jobTitle || 'N/A'}</td>\n                            <td>\n                                <button onClick={() => deleteContact(contact._id)}>Delete</button>\n                                <button onClick={() => updateContact(contact._id)}>Update</button>\n                            </td>\n                            \n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n            {rowId ? <UpdatePage id={rowId}/> : <></>}\n        </div>\n    );\n};\n\nexport default ContactTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}